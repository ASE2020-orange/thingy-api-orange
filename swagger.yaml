swagger: "2.0"
info:
  description: "Thingy Quizz is a project for the course : advanced software engineering in the BeNeFri cursus. It was realized during the semester 2020A"
  version: "1.0.0"
  title: "Thingy Quizz"
host: "51.15.194.171:8080"
basePath: "/api"
tags:
- name: "hello"
  description: "Test that everything is okay"
- name: "profile"
  description: "Profile of a connected user"
- name: "oauth"
  description: "Route used for the OAuth authentication"
- name: "games"
  description: "Informations related to the state of a game"
- name: "categories"
  description: "Categories for a game"
- name: "users"
  description: "Users route"
schemes:
- "http"

securityDefinitions:
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: "http://51.15.194.171:8080/oauth"
    tokenUrl: "http://51.15.194.171:8080/oauth" 
    scopes:
      login: Grants access to profile, save in DB using user_id, etc.
definitions:
  UserProfile:
    type: object
    properties:
      id:
        type: integer
        description: The user's ID.
      name:
        type: string
        description: The user name.
      avatar_url:
        type: string
        description: The user's avatar's url.
      location:
        type: string
        description: The user's living location.
        
paths:
  /:
    get:
      tags:
      - "hello"
      produces:
      - "application/html"
      responses:
        "200":
          description: ""
  /profile/:
    get:
      security:
        - OAuth2: [login]
      tags:
      - "profile"
      produces:
      - "application/json"
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/UserProfile'
  /oauth/:
    get:
      tags:
      - "oauth"
      produces:
      - "application/json"
      responses:
        "200":
          description: ""
          schema:
            type: object
            properties:
              urls:
                type: string
                description: Github authentication URL
    post:
      consumes:
        - application/json
      parameters:
        - in: body
          name: code
          description: The user's github code to login
          required: true
          schema:
            type: string
      tags:
      - "oauth"
      produces:
      - "application/json"
      responses:
        "401":
          description: "Login error"
        "200":
          description: "Sucessfully logged in"
          schema:
            type: object
            properties:
              jwt:
                type: string
                description: "User's JWT to send back for next requests"
    delete:
      security:
        - OAuth2: [login]
      tags:
      - "oauth"
      produces:
      - "application/json"
      responses:
        "200":
          description: ""
  /games/:
    get:
      tags:
      - "games"
      produces:
      - "application/json"
      responses:
        "200":
          description: ""
          schema:
            type: object
            properties:
              game_id:
                type: integer
                description: "The game's ID if existing or -1"
    post:
      tags:
      - "games"
      consumes:
        - application/json
      parameters:
        - in: body
          name: game
          schema:
            type: object
            properties:
              category:
                type: integer
                description: "Open Trivia DB category ID"
              difficulty:
                type: string
                description: "Open Trivia DB Difficulty label"
            
         
      produces:
      - "application/json"
      responses:
        "500":
          description: "OpenTriviaDB Error"
        "200":
          description: "Game was created"
          schema:
            type: object
            properties:
              game_id:
                type: integer
                description: "The game's ID if existing or -1"

  /games/{id}/question/:
    parameters:
      - name: id
        in: path
        required: true
        type: integer
    get:
      tags:
        - "games"
      produces:
        - "application/json"
      responses:
        "200":
          description: ""
          schema:
            type: object
            properties:
              category:
                type: integer
                description: "The quiz's category ID"
              question:
                type: string
                description: "The question's title"
              answers:
                type: object
                properties:
                  answer_id:
                    type: integer
                    description: "The answer's id"
                  answer:
                    type: string
                    description: "The answer's title"
                  
    post:
      security:
        - OAuth2: [login]
      consumes:
        - application/json
      parameters:
        - in: body
          name: data
          schema:
            type: object
            properties:
              thingy_id:
                type: integer
                description: "User's thingy ID"
              answer_id:
                type: integer
                description: "User's answer ID"
      tags:
      - "games"
      produces:
      - "application/json"
      responses:
        "200":
          description: ""
          schema:
            type: object
            properties:
              correct:
                type: boolean
                description: "Answer is correct or not"
          
  /categories/:
    get:
      tags:
        - "categories"
      produces:
        - "application/json"
      responses:
        "200":
          description: ""
          schema:
            type: object
            properties:
              trivia_categories:
                type: array
                description: "Array of open trivia DB categories name and IDs"
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Category ID"
                    name:
                      type: string
                      description: "Category title"
  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: integer
    get:
      tags:
        - "users"
      produces:
        - "application/json"
      responses:
        "200":
          description: ""
  /answers/users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        type: integer
    get:
      tags:
        - "users"
      produces:
        - "application/json"
      responses:
        "200":
          description: ""
